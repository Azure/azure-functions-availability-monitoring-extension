<?xml version="1.0" encoding="utf-8"?>

<!-- This Directory.Build.props file needs to apply to all projects and solutions in this repository. It is placed near the rot of the repo accordingly. 	-->
<!-- If you use more specific Directory.Build.props files, you need to reference this file from there. You can do it with a statement such as this:      	-->
<!--     <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />                                	-->
<!-- For details see: https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2019#use-case-multi-level-merging               	-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	
	<!--                                                                                                                                                    -->
	<!-- # Purpose                                                                                                                                          -->
	<!--                                                                                                                                                    -->
	<!-- This file redirects binary output for all MSBuild projects in this repository into a common directory outside the repository.                      -->
	<!-- This allows keeping things clean and concise.                                                                                                      -->
	<!-- You also avoid the need to search for the binaries all over the repository, to clean them manually and/or to collect them in one place later.      -->
	<!--                                                                                                                                                    -->
	<!-- Generally, the recommended local directory structure for code projects is as follows:                                                              -->
	<!--                                                                                                                                                    -->
	<!--     some root that contains all your code projects\                                                                                                -->
	<!--         short descriptive moniker for project X\                                                                                                   -->
	<!--             repository X name\                                                                                                                     -->
	<!--                 files contained within repository X name                                                                                           -->
	<!--                 . . .                                                                                                                              -->
	<!--         short descriptive moniker for project Y\                                                                                                   -->
	<!--             repository Y name\                                                                                                                     -->
	<!--                 files contained within repository Y name                                                                                           -->
	<!--                 . . .                                                                                                                              -->
	<!--         . . .                                                                                                                                      -->
	<!--                                                                                                                                                    -->
	<!-- A specific example:                                                                                                                                -->
	<!--                                                                                                                                                    -->
	<!--     c:\Code\GitHub\                                                                                                                                -->
	<!--         AvlMon-Ext\                                                                                                                                -->
	<!--             azure-functions-availability-monitoring-extension\                                                                                     -->
	<!--                 readme.md                                                                                                                          -->
	<!--                 license                                                                                                                            -->
	<!--                 . . .                                                                                                                              -->
	<!--         AzWedJobs\                                                                                                                                 -->
	<!--             azure-webjobs-sdk\                                                                                                                     -->
	<!--                 readme.md                                                                                                                          -->
	<!--                 licence.txt                                                                                                                        -->
	<!--                 . . .                                                                                                                              -->
	<!--         . . .                                                                                                                                      -->
	<!--                                                                                                                                                    -->
	<!-- So, this basically means that the “git clone” command is issued from an just-created empty directory for the descriptive monitor. E.g.:            -->
	<!--     C:\Code\GitHub>mkdir AvlMon-Ext                                                                                                                -->
	<!--     C:\Code\GitHub>cd AvlMon-Ext                                                                                                                   -->
	<!--     C:\Code\GitHub\AvlMon-Ext>git clone https://github.com/Azure/azure-functions-availability-monitoring-extension.git                             -->
	<!--     Cloning into 'azure-functions-availability-monitoring-extension'...                                                                            -->
	<!--                                                                                                                                                    -->
	<!-- This structure has two beneficial properties:                                                                                                      -->
	<!--  - You can use different monikers to enlist into the same repo (or a fork) many times, keeping an identical internal structure.                    -->
	<!--  - You can place your binary output OUTSIDE the repo, keeping things clean and concise.                                                            -->
	<!--                                                                                                                                                    -->
	<!-- This PROPS file modifies the MSBuild properties that point to output directories to collect the binaries for all projects in a single place.       -->
	<!--                                                                                                                                                    -->
	<!-- # Details                                                                                                                                          -->
	<!--                                                                                                                                                    -->
	<!-- The logic in this file uses two marker files placed in the repo: “.EnlistmentRoot.marker” and “.SourceRoot.marker”:                                -->
	<!--                                                                                                                                                    -->
	<!--  - “.EnlistmentRoot.marker” must be placed into the root of the repository.                                                                        -->
	<!--    It is the top-most folder; typically, it is the folder that contains the ".git/" subfolder.                                                     -->
	<!--                                                                                                                                                    -->
	<!--  - “.SourceRoot.marker” must be placed into the root folder of all code sources in the repository.                                                 -->
	<!--    This “source root” may be the same as the repository root (you may place both files next to each other), or it may be a subfolder.              -->
	<!--    For example, the repo root may contain other sub-folders in the root, containing other files, such as documentation.                            -->
	<!--                                                                                                                                                    -->
	<!-- After the binary output was redirected by this PROPS file, your directory structure will look something like this:                                 -->
	<!--                                                                                                                                                    -->
	<!--     c:\Code\GitHub\                                                                                                                                -->
	<!--             AvlMon-Ext\                                                                                                                            -->
	<!--                     obj\                                                   (the OBJ folders for all projects are redirected here)                  -->
	<!--                             ...                                                                                                                    -->
	<!--                     bin\                                                   (the BIN folders for all projects are redirected here)                  -->
	<!--                             ...                                                                                                                    -->
	<!--                     createdPackages\                                       (the NuGet files for all projects are created here)                     -->
	<!--                             ...                                                                                                                    -->
	<!--                     azure-functions-availability-monitoring-extension\     (the repo root)                                                         -->
	<!--                             src\                                           (the source root folder, all code sources are contained within here)	-->
	<!--                                     Code Project A\                                                                                                -->
	<!--                                             CodeProjectA.csproj                                                                                    -->
	<!--                                             SomeFile.cs                                                                                            -->
	<!--                                             ...                                                                                                    -->
	<!--                                     Code Project B\                                                                                                -->
	<!--                                             CodeProjectB.csproj                                                                                    -->
	<!--                                             SomeFile.cs                                                                                            -->
	<!--                                             ...                                                                                                    -->
	<!--                                     .SourceRoot.marker                     (the source-root marker file)                                           -->
	<!--                                     Directory.Build.props                  (this file)                                                             -->
	<!--                                     ...                                                                                                            -->
	<!--                             user manuals\                                  (some folder that does not contain sources)                             -->
	<!--                                     ...                                                                                                            -->
	<!--                             .EnlistmentRoot.marker                         (the repository-root marker file)                                       -->
	<!--                             readme.md                                                                                                              -->
	<!--                             license                                                                                                                -->
	<!--                             . . .                                                                                                                  -->
	<!--                                                                                                                                                    -->
	
    <!-- Control options:                                                                                                                                   -->
	<PropertyGroup>
	
        <!-- Set AvoidRedirectingBinaryOutput to True to turn off all redirects in tis file.                                                                -->
        <!-- This will result in the same build behavior as if this file did not exist, except for an informative log message during build.                 -->
		<AvoidRedirectingBinaryOutput>false</AvoidRedirectingBinaryOutput>
		
        <!-- Set ForceBinaryOutputIntoEnlistment to True to redirect all binary output into a ".BinaryOutput\" directory WITHIN the repository root,        -->
        <!-- instead of individual folders ABOVE the repo root.                                                                                             -->
        <!-- This is not recommended in general, but it can be useful if repo enlistments are all contained within the same parent directory without the    -->
        <!-- intermediate project monikers described above. In that case, this will ensure that binaries from different repository copies are separated.    -->
        <!-- If you use this option, make sure to add ".BinaryOutput\" to your .gitignore.                                                                  -->
		<ForceBinaryOutputIntoEnlistment>false</ForceBinaryOutputIntoEnlistment>
        
	</PropertyGroup>
	
    <PropertyGroup Condition=" '$(AvoidRedirectingBinaryOutput)' != 'True' ">
	
		<!-- EnlistmentRoot is the root folder of the repository. Typically, it is the folder that contains the ".git/" subfolder. -->
		<!-- The binary output root directories ("bin/" and "obj/") will be typically placed placed immediately above it. -->
		<!-- You can use ForceBinaryOutputIntoEnlistment to control that behaviour. --> 
		<EnlistmentRoot>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), '.EnlistmentRoot.marker'))</EnlistmentRoot>
		
		<!-- SourceRoot is the root folder of the source code in the repository. It may be the same as EnlistmentRoot, or it may be -->
		<!-- a subfolder, if there are other sub-folders in the root, containing other files, such as documentation. -->
		<!-- It us used to compute RelativeOutputPathBase below. -->
		<SourceRoot>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), '.SourceRoot.marker'))</SourceRoot>
		
		<!-- RelativeOutputPathBase is relative path from SourceRoot to the project file being built -->
		<!-- will be the relative path from the binary roots to the respective bianary files. -->
		<RelativeOutputPathBase>$(MSBuildProjectDirectory.Substring($(SourceRoot.Length)))</RelativeOutputPathBase>
		
		<!-- By default, binary output directories ("bin/" and "obj/", ...) should be placed directly ABOVE the root of the repository. -->
		<!-- However, ForceBinaryOutputIntoEnlistment allows putting the binarlies INTO the repository root. -->
		<BinaryOutputParent Condition=" '$(ForceBinaryOutputIntoEnlistment)' == 'True' ">$(EnlistmentRoot)\.BinaryOutput\</BinaryOutputParent>
		<BinaryOutputParent Condition=" '$(ForceBinaryOutputIntoEnlistment)' != 'True' ">$(EnlistmentRoot)\..\</BinaryOutputParent>
		
		<!-- By default, Configuration is DEBUG, but user can (and will) overwrite it. -->
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		
		<!-- By default, PlatformName is AnyCPU, but user can (and may) overwrite it. -->
		<PlatformName Condition=" '$(PlatformName)' == '' ">AnyCPU</PlatformName>
		
		<OutputConfigMoniker Condition=" '$(PlatformName)' == 'AnyCPU' ">$(Configuration)</OutputConfigMoniker>
		<OutputConfigMoniker Condition=" '$(PlatformName)' != 'AnyCPU' ">$(PlatformName)\$(Configuration)</OutputConfigMoniker>
		
		<!-- IntermediateOutputPath is the OBJ folder for the project. It is within BaseIntermediateOutputPath, which is the OBJ root for all projects. -->
		<BaseIntermediateOutputPath>$(BinaryOutputParent)\obj</BaseIntermediateOutputPath>
		<BaseIntermediateOutputPath>$([System.IO.Path]::GetFullPath( $(BaseIntermediateOutputPath) ))</BaseIntermediateOutputPath>
		
		<IntermediateOutputPath>$(BaseIntermediateOutputPath)\$(OutputConfigMoniker)\$(RelativeOutputPathBase)</IntermediateOutputPath>
        <IntermediateOutputPath>$([System.IO.Path]::GetFullPath( $(IntermediateOutputPath) ))\</IntermediateOutputPath>
		
		<MSBuildProjectExtensionsPath>$(IntermediateOutputPath)</MSBuildProjectExtensionsPath>

		<!-- OutputPath is the BIN folder for the project. It is within BaseOutputPath, which is the BIN root for all projects. -->
		<BaseOutputPath>$(BinaryOutputParent)\bin</BaseOutputPath>
        <BaseOutputPath>$([System.IO.Path]::GetFullPath( $(BaseOutputPath) ))</BaseOutputPath>
		
		<OutputPath>$(BaseOutputPath)\$(OutputConfigMoniker)\$(RelativeOutputPathBase)</OutputPath>
        <OutputPath>$([System.IO.Path]::GetFullPath( $(OutputPath) ))\</OutputPath>
		
		<!-- PackageOutputPath is where all the generated NuGet packages are going to go. Tnis is different to where we are storing the importned packages. -->
        <PackageOutputPath>$(BinaryOutputParent)\createdPackages\$(OutputConfigMoniker)</PackageOutputPath>
        <PackageOutputPath>$([System.IO.Path]::GetFullPath( $(PackageOutputPath) ))</PackageOutputPath>

		<!-- PackagesDir is where the local importend packages will go. -->
        <PackagesDir>$(BinaryOutputParent)\ImportedPackages</PackagesDir>
        <PackagesDir>$([System.IO.Path]::GetFullPath( $(PackagesDir) ))</PackagesDir>

    </PropertyGroup>

    <PropertyGroup>
        <!-- Enable NuGet package restore during build -->
        <RestorePackages>true</RestorePackages>
        <RequireRestoreConsent>false</RequireRestoreConsent>
    </PropertyGroup>
	
	<Target Name="SetOutputDirectories"  BeforeTargets="Build" KeepDuplicateOutputs="True">
	
		<!-- This target will run before the build, but after the redefinitions in this file took place. -->
		<!-- It can be used to view the details of the redefinitions, but be careful when using it for debugging. -->
	
		<PropertyGroup>
			<SodMgsPrefix>Set Output Directories</SodMgsPrefix>
		</PropertyGroup>
		
		<Message Condition=" '$(AvoidRedirectingBinaryOutput)' != 'True' "
				 Text="[$(SodMgsPrefix)] Binary output directories were redirected for project &quot;$(MSBuildProjectName)&quot;. For details, uncomment the Message Logs in the Set-Output-Dirs PROPS file and rebuild."
				 Importance="high" />
				 
		<Message Condition=" '$(AvoidRedirectingBinaryOutput)' == 'True' "
				 Text="[$(SodMgsPrefix)] Binary output directories were NOT redirected for project &quot;$(MSBuildProjectName)&quot;, because &quot;AvoidRedirectingBinaryOutput&quot; is set. For details, uncomment the Message Logs in the Set-Output-Dirs PROPS file and rebuild."
				 Importance="high" />
				 
		<Message Text="[$(SodMgsPrefix)]     Project file:                    &quot;$(MSBuildProjectFullPath)&quot;." Importance="high"/>
		<Message Text="[$(SodMgsPrefix)]     Set-Output-Dirs PROPS file:      &quot;$(MSBuildThisFileFullPath)&quot;." Importance="high"/>
		
		<!-- !! The commented section below contains useful code and must be maintained when changes to this file are made !! -->
		<!-- Comment/uncomment the lines below to control whether you see the detailed results of the output folder(s) redirection. -->
		
		<!--
		<Message Text="[$(SodMgsPrefix)]     AvoidRedirectingBinaryOutput:    &quot;$(AvoidRedirectingBinaryOutput)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     ForceBinaryOutputIntoEnlistment: &quot;$(ForceBinaryOutputIntoEnlistment)&quot;." Importance="high" />
		
		<Message Text="[$(SodMgsPrefix)]     MSBuildProjectDirectory:         &quot;$(MSBuildProjectDirectory)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     EnlistmentRoot:                  &quot;$(EnlistmentRoot)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     SourceRoot:                      &quot;$(SourceRoot)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     RelativeOutputPathBase:          &quot;$(RelativeOutputPathBase)&quot;." Importance="high" />
		
		<Message Text="[$(SodMgsPrefix)]     BinaryOutputParent:              &quot;$(BinaryOutputParent)&quot;." Importance="high" />
		
		<Message Text="[$(SodMgsPrefix)]     Configuration:                   &quot;$(Configuration)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     PlatformName:                    &quot;$(PlatformName)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     OutputConfigMoniker:             &quot;$(OutputConfigMoniker)&quot;." Importance="high" />
		
		<Message Text="[$(SodMgsPrefix)]     BaseIntermediateOutputPath:      &quot;$(BaseIntermediateOutputPath)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     IntermediateOutputPath:          &quot;$(IntermediateOutputPath)&quot;." Importance="high" />
		
		<Message Text="[$(SodMgsPrefix)]     BaseOutputPath:                  &quot;$(BaseOutputPath)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     OutputPath:                      &quot;$(OutputPath)&quot;." Importance="high" />
		
		<Message Text="[$(SodMgsPrefix)]     MSBuildProjectExtensionsPath:    &quot;$(MSBuildProjectExtensionsPath)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     PackageOutputPath:               &quot;$(PackageOutputPath)&quot;." Importance="high" />
		<Message Text="[$(SodMgsPrefix)]     PackagesDir:                     &quot;$(PackagesDir)&quot;." Importance="high" />
		-->
		
	</Target>

</Project>